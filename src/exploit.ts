/**
 * This file uses a hypothetical subset implementation of IMAP commands,
 * alongside a simplified server reset trigger to demonstrate how the wrong
 * message could accidentally be fetched
 *
 * To view the exact imap commands that we are using, please refer to the
 * src/index.ts file.
 */

import { IMAPCommand, ServerCommand, imapCommand, serverCommand } from ".";

// We will first demonstrate correct execution.
console.log("Correct Execution:");

// We initialize the server with two messages
serverCommand(ServerCommand.INIT);

// Then, we search for the message with a subject containing "1"
console.log(imapCommand(IMAPCommand.SEARCH_1));

// Finally, we fetch the message with an id of 1, as that was the id given by the previous command
console.log(imapCommand(IMAPCommand.FETCH_1));

// Note that the response is the correct test message 1.

// Now, we will show how the wrong message can be fetched if the server resets ids.
console.log("Incorrect Execution:");

// We initialize the server with the same two messages
serverCommand(ServerCommand.INIT);

// Then, we search for the message with a subject containing "1"
console.log(imapCommand(IMAPCommand.SEARCH_1));

// This time, before we fetch the message, the server resets the ids of the messages
serverCommand(ServerCommand.RESET);

// Finally, we fetch the message with an id of 1, as that was the id given by the previous command
console.log(imapCommand(IMAPCommand.FETCH_1));

// Note that the response is the incorrect test message 2.
